description: >
  Accuknox Secret Scan
parameters:
  RESULTS:
    description: 'Specifies which type(s) of results to output: verified, unknown, unverified, filtered_unverified. Defaults to all types.'
    default: ""
    type: string
  BRANCH:
    description: 'The branch to scan. Use all-branches to scan all branches.'
    default: ""
    type: string
  EXCLUDE_PATHS:
    description: "Paths to exclude from the scan."
    default: ""
    type: string
  ADDITIONAL_ARGUMENTS:
    description: "Extra parameters for secret scanning."
    default: ""
    type: string
  SOFT_FAIL:
    description: "Do not return an error code if there are failed checks"
    default: true
    type: boolean

steps:
  - run:
      name: Run AccuKnox ASPM Scanner
      environment:
        RESULTS: <<parameters.RESULTS>>
        BRANCH: <<parameters.BRANCH>>
        EXCLUDE_PATHS: <<parameters.EXCLUDE_PATHS>>
        ADDITIONAL_ARGUMENTS: <<parameters.ADDITIONAL_ARGUMENTS>>
        SOFT_FAIL: <<parameters.SOFT_FAIL>>
      command: |
        echo "Installing AccuKnox ASPM scanner..."
        pip install https://github.com/accuknox/aspm-scanner-cli/releases/download/v0.13.4/accuknox_aspm_scanner-0.13.4-py3-none-any.whl --break-system-packages

        echo "Running AccuKnox secret scan"
        
        if [ "$SOFT_FAIL" = "true" ]; then
          SOFT_FAIL_ARG="--softfail"
        fi

        COMMAND="git file://."

        ARGS=""
        [ -n "$RESULTS" ] && ARGS="$ARGS --results $RESULTS"
        [ -n "$BRANCH" ] && ARGS="$ARGS --branch $BRANCH"
        [ -n "$EXCLUDE_PATHS" ] && ARGS="$ARGS --exclude-paths $EXCLUDE_PATHS"
        [ -n "$ADDITIONAL_ARGUMENTS" ] && ARGS="$ARGS $ADDITIONAL_ARGUMENTS"

        echo accuknox-aspm-scanner scan $SOFT_FAIL_ARG secret --command "$COMMAND $ARGS" --container-mode
        accuknox-aspm-scanner scan $SOFT_FAIL_ARG secret --command "$COMMAND $ARGS" --container-mode