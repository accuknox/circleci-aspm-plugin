description: >
  AccuKnox SAST Scan using SonarQube
parameters:
  PIPELINE_URL:
    description: "CI pipeline URL"
    default: ""
    type: string
  SKIP_SONAR_SCAN:
    description: "If true, skips the SonarQube scan"
    default: false
    type: boolean
  SOFT_FAIL:
    description: "Do not return an error code if there are failed checks"
    default: true
    type: boolean
steps:
  - run:
      name: Run AccuKnox ASPM SAST Scan
      environment:
        PIPELINE_URL: <<parameters.PIPELINE_URL>>
        SOFT_FAIL: <<parameters.SOFT_FAIL>>
        SKIP_SONAR_SCAN: <<parameters.SKIP_SONAR_SCAN>>
      command: |
        curl -L https://github.com/accuknox/aspm-scanner-cli/releases/download/v0.8.4/accuknox-aspm-scanner_linux_x86_64 -o accuknox-aspm-scanner
        chmod +x accuknox-aspm-scanner

        SOFT_FAIL="${SOFT_FAIL//[$'\t\r\n ']}"
        SOFT_FAIL_ARG=""
        [ "$SOFT_FAIL" = "1" ] && SOFT_FAIL_ARG="--softfail"

        export PIPELINE_URL="${PIPELINE_URL:-$CIRCLE_BUILD_URL}"

        ARGS=""
        [ "$SKIP_SONAR_SCAN" = "1" ] && ARGS="$ARGS -skip-sonar-scan"
        [ -n "$SONAR_PROJECT_KEY" ] && ARGS="$ARGS --sonar-project-key \"$SONAR_PROJECT_KEY\""
        [ -n "$SONAR_TOKEN" ] && ARGS="$ARGS --sonar-token \"$SONAR_TOKEN\""
        [ -n "$SONAR_HOST_URL" ] && ARGS="$ARGS --sonar-host-url \"$SONAR_HOST_URL\""
        [ -n "$SONAR_ORG_ID" ] && ARGS="$ARGS --sonar-org-id \"$SONAR_ORG_ID\""
        [ -n "$PIPELINE_URL" ] && ARGS="$ARGS --pipeline-url \"$PIPELINE_URL\""

        echo "Running: accuknox-aspm-scanner $SOFT_FAIL_ARG scan sq-sast $ARGS"
        eval ./accuknox-aspm-scanner $SOFT_FAIL_ARG scan sq-sast $ARGS