description: >
  AccuKnox SAST Scan using SonarQube
parameters:
  PIPELINE_URL:
    description: "CI pipeline URL"
    default: ""
    type: string
  SKIP_SONAR_SCAN:
    description: "If true, skips the SonarQube scan"
    default: false
    type: boolean
  SOFT_FAIL:
    description: "Do not return an error code if there are failed checks"
    default: true
    type: boolean
steps:
  - run:
      name: Run AccuKnox ASPM Scanner
      environment:
        PIPELINE_URL: <<parameters.PIPELINE_URL>>
        SOFT_FAIL: <<parameters.SOFT_FAIL>>
        SKIP_SONAR_SCAN: <<parameters.SKIP_SONAR_SCAN>>
      command: |
        curl -L https://github.com/accuknox/aspm-scanner-cli/releases/download/v0.13.1/accuknox-aspm-scanner -o accuknox-aspm-scanner
        chmod +x accuknox-aspm-scanner

        SOFT_FAIL="${SOFT_FAIL//[$'\t\r\n ']}"
        SOFT_FAIL_ARG=""
        if [ "$SOFT_FAIL" = 1 ]; then
          SOFT_FAIL_ARG="--softfail"
        fi

        export PIPELINE_URL="${PIPELINE_URL:-$CIRCLE_BUILD_URL}"

        ARGS=()
        [ "$SKIP_SONAR_SCAN" = "1" ] && ARGS+=("--skip-sonar-scan")
        [ -n "$SONAR_PROJECT_KEY" ] && ARGS+=("-Dsonar.projectKey=$SONAR_PROJECT_KEY")
        [ -n "$SONAR_TOKEN" ] && ARGS+=("-Dsonar.token=$SONAR_TOKEN")
        [ -n "$SONAR_HOST_URL" ] && ARGS+=("-Dsonar.host.url=$SONAR_HOST_URL")
        [ -n "$SONAR_ORG_ID" ] && ARGS+=("-Dsonar.organization=$SONAR_ORG_ID")
        ARGS+=("-Dsonar.qualitygate.wait=true")

        CMD_STRING="${ARGS[@]}"

        echo ./accuknox-aspm-scanner scan $SOFT_FAIL_ARG sq-sast --command "${CMD_STRING}" --pipeline-url "$PIPELINE_URL" --container-mode
        ./accuknox-aspm-scanner scan $SOFT_FAIL_ARG sq-sast --command "${CMD_STRING}" --pipeline-url "$PIPELINE_URL" --container-mode