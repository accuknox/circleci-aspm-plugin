description: >
  Accuknox Container Scan
parameters:
  IMAGE_NAME:
    description: "Docker image name"
    type: string
  TAG:
    description: "Docker image tag name"
    type: string
  SEVERITY:
    description: "Comma-separated severities: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
    default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
    type: string
  SOFT_FAIL:
    description: "Do not return an error code if there are failed checks"
    default: true
    type: boolean
  IMAGE_TAR:
    description: "Docker image tar file in the artifact"
    type: string

steps:
  - run:
      name: Run AccuKnox ASPM Scanner
      environment:
        IMAGE_NAME: <<parameters.IMAGE_NAME>>
        TAG: <<parameters.TAG>>
        SEVERITY: <<parameters.SEVERITY>>
        SOFT_FAIL: <<parameters.SOFT_FAIL>>
        IMAGE_TAR: <<parameters.IMAGE_TAR>>
      command: |
        echo "Installing AccuKnox ASPM scanner..."
        pip install https://github.com/accuknox/aspm-scanner-cli/releases/download/v0.13.4/accuknox_aspm_scanner-0.13.4-py3-none-any.whl --break-system-packages

        echo "Running AccuKnox container scan"
        if [ -n "$IMAGE_NAME" ] && [ -n "$TAG" ]; then
          docker build -t $IMAGE_NAME:$TAG -f Dockerfile .
          docker save -o $IMAGE_TAR $IMAGE_NAME:$TAG
          docker load -i $IMAGE_TAR
        else
          docker load -i /tmp/workspace/$IMAGE_TAR
        fi

        if [ "$SOFT_FAIL" = "true" ]; then
          SOFT_FAIL_ARG="--softfail"
        fi
        CMD="image $IMAGE"
        [ -n "$TAG" ] && CMD="image $IMAGE_NAME:$TAG"
        [ -n "$SEVERITY" ] && CMD="$CMD --severity $SEVERITY"
        echo accuknox-aspm-scanner scan $SOFT_FAIL_ARG container --command "$CMD" --container-mode
        accuknox-aspm-scanner scan $SOFT_FAIL_ARG container --command "$CMD" --container-mode